/**
 * Copyright (c) 2016-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zwave.commandclass.impl.loopback;

import static org.junit.Assert.assertEquals;

import java.util.Map;
import com.zsmartsystems.zwave.commandclass.impl.CommandClassTimeParametersV1;

/**
 * Class to implement loopback tests for command class <b>COMMAND_CLASS_TIME_PARAMETERS</b> version <b>1</b>.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class CommandClassTimeParametersV1LoopbackTest {
    /**
     * Performs an in/out test of the TIME_PARAMETERS_SET command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param year {@link Integer}
     * @param month {@link Integer}
     * @param day {@link Integer}
     * @param hourUtc {@link Integer}
     * @param minuteUtc {@link Integer}
     * @param secondUtc {@link Integer}
     */
    public static void testTimeParametersSetLoopback(Integer year, Integer month, Integer day, Integer hourUtc,
            Integer minuteUtc, Integer secondUtc) {
        byte[] testPayload = CommandClassTimeParametersV1.getTimeParametersSet(year, month, day, hourUtc, minuteUtc,
                secondUtc);

        Map<String, Object> response = CommandClassTimeParametersV1.handleTimeParametersSet(testPayload);
        assertEquals(year, (Integer) response.get("YEAR"));
        assertEquals(month, (Integer) response.get("MONTH"));
        assertEquals(day, (Integer) response.get("DAY"));
        assertEquals(hourUtc, (Integer) response.get("HOUR_UTC"));
        assertEquals(minuteUtc, (Integer) response.get("MINUTE_UTC"));
        assertEquals(secondUtc, (Integer) response.get("SECOND_UTC"));
    }

    /**
     * Performs an in/out test of the TIME_PARAMETERS_REPORT command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param year {@link Integer}
     * @param month {@link Integer}
     * @param day {@link Integer}
     * @param hourUtc {@link Integer}
     * @param minuteUtc {@link Integer}
     * @param secondUtc {@link Integer}
     */
    public static void testTimeParametersReportLoopback(Integer year, Integer month, Integer day, Integer hourUtc,
            Integer minuteUtc, Integer secondUtc) {
        byte[] testPayload = CommandClassTimeParametersV1.getTimeParametersReport(year, month, day, hourUtc, minuteUtc,
                secondUtc);

        Map<String, Object> response = CommandClassTimeParametersV1.handleTimeParametersReport(testPayload);
        assertEquals(year, (Integer) response.get("YEAR"));
        assertEquals(month, (Integer) response.get("MONTH"));
        assertEquals(day, (Integer) response.get("DAY"));
        assertEquals(hourUtc, (Integer) response.get("HOUR_UTC"));
        assertEquals(minuteUtc, (Integer) response.get("MINUTE_UTC"));
        assertEquals(secondUtc, (Integer) response.get("SECOND_UTC"));
    }

}
