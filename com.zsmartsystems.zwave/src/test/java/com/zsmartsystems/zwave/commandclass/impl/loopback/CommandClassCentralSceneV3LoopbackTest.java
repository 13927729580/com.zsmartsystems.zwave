/**
 * Copyright (c) 2016-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zwave.commandclass.impl.loopback;

import static org.junit.Assert.assertEquals;

import java.util.Map;
import java.util.List;
import com.zsmartsystems.zwave.commandclass.impl.CommandClassCentralSceneV3;

/**
 * Class to implement loopback tests for command class <b>COMMAND_CLASS_CENTRAL_SCENE</b> version <b>3</b>.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class CommandClassCentralSceneV3LoopbackTest {
    /**
     * Performs an in/out test of the CENTRAL_SCENE_SUPPORTED_REPORT command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param supportedScenes {@link Integer}
     * @param identical {@link Boolean}
     * @param numberOfBitMaskBytes {@link Integer}
     * @param slowRefreshSupport {@link Boolean}
     */
    public static void testCentralSceneSupportedReportLoopback(Integer supportedScenes, Boolean identical,
            Integer numberOfBitMaskBytes, Boolean slowRefreshSupport) {
        byte[] testPayload = CommandClassCentralSceneV3.getCentralSceneSupportedReport(supportedScenes, identical,
                numberOfBitMaskBytes, slowRefreshSupport);

        Map<String, Object> response = CommandClassCentralSceneV3.handleCentralSceneSupportedReport(testPayload);
        assertEquals(supportedScenes, (Integer) response.get("SUPPORTED_SCENES"));
        assertEquals(identical, (Boolean) response.get("IDENTICAL"));
        assertEquals(numberOfBitMaskBytes, (Integer) response.get("NUMBER_OF_BIT_MASK_BYTES"));
        assertEquals(slowRefreshSupport, (Boolean) response.get("SLOW_REFRESH_SUPPORT"));
    }

    /**
     * Performs an in/out test of the CENTRAL_SCENE_NOTIFICATION command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param sequenceNumber {@link Integer}
     * @param keyAttributes {@link String}
     * @param slowRefresh {@link Boolean}
     * @param sceneNumber {@link Integer}
     */
    public static void testCentralSceneNotificationLoopback(Integer sequenceNumber, String keyAttributes,
            Boolean slowRefresh, Integer sceneNumber) {
        byte[] testPayload = CommandClassCentralSceneV3.getCentralSceneNotification(sequenceNumber, keyAttributes,
                slowRefresh, sceneNumber);

        Map<String, Object> response = CommandClassCentralSceneV3.handleCentralSceneNotification(testPayload);
        assertEquals(sequenceNumber, (Integer) response.get("SEQUENCE_NUMBER"));
        assertEquals(keyAttributes, (String) response.get("KEY_ATTRIBUTES"));
        assertEquals(slowRefresh, (Boolean) response.get("SLOW_REFRESH"));
        assertEquals(sceneNumber, (Integer) response.get("SCENE_NUMBER"));
    }

    /**
     * Performs an in/out test of the CENTRAL_SCENE_CONFIGURATION_SET command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param slowRefresh {@link Boolean}
     */
    public static void testCentralSceneConfigurationSetLoopback(Boolean slowRefresh) {
        byte[] testPayload = CommandClassCentralSceneV3.getCentralSceneConfigurationSet(slowRefresh);

        Map<String, Object> response = CommandClassCentralSceneV3.handleCentralSceneConfigurationSet(testPayload);
        assertEquals(slowRefresh, (Boolean) response.get("SLOW_REFRESH"));
    }

    /**
     * Performs an in/out test of the CENTRAL_SCENE_CONFIGURATION_REPORT command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param slowRefresh {@link Boolean}
     */
    public static void testCentralSceneConfigurationReportLoopback(Boolean slowRefresh) {
        byte[] testPayload = CommandClassCentralSceneV3.getCentralSceneConfigurationReport(slowRefresh);

        Map<String, Object> response = CommandClassCentralSceneV3.handleCentralSceneConfigurationReport(testPayload);
        assertEquals(slowRefresh, (Boolean) response.get("SLOW_REFRESH"));
    }

}
