/**
 * Copyright (c) 2016-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zwave.commandclass.impl.loopback;

import static org.junit.Assert.assertEquals;

import java.util.Map;
import com.zsmartsystems.zwave.commandclass.impl.CommandClassPrepaymentV1;

/**
 * Class to implement loopback tests for command class <b>COMMAND_CLASS_PREPAYMENT</b> version <b>1</b>.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class CommandClassPrepaymentV1LoopbackTest {
    /**
     * Performs an in/out test of the PREPAYMENT_BALANCE_GET command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param balanceType {@link String}
     */
    public static void testPrepaymentBalanceGetLoopback(String balanceType) {
        byte[] testPayload = CommandClassPrepaymentV1.getPrepaymentBalanceGet(balanceType);

        Map<String, Object> response = CommandClassPrepaymentV1.handlePrepaymentBalanceGet(testPayload);
        assertEquals(balanceType, (String) response.get("BALANCE_TYPE"));
    }

    /**
     * Performs an in/out test of the PREPAYMENT_BALANCE_REPORT command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param meterType {@link Integer}
     * @param balanceType {@link Integer}
     * @param scale {@link Integer}
     * @param balancePrecision {@link Integer}
     * @param balanceValue {@link Long}
     * @param debtPrecision {@link Integer}
     * @param debt {@link Long}
     * @param emerCreditPrecision {@link Integer}
     * @param emerCredit {@link Long}
     * @param debtRecoveryPercentage {@link Integer}
     */
    public static void testPrepaymentBalanceReportLoopback(Integer meterType, Integer balanceType, Integer scale,
            Integer balancePrecision, Long balanceValue, Integer debtPrecision, Long debt, Integer emerCreditPrecision,
            Long emerCredit, Integer debtRecoveryPercentage) {
        byte[] testPayload = CommandClassPrepaymentV1.getPrepaymentBalanceReport(meterType, balanceType, scale,
                balancePrecision, balanceValue, debtPrecision, debt, emerCreditPrecision, emerCredit,
                debtRecoveryPercentage);

        Map<String, Object> response = CommandClassPrepaymentV1.handlePrepaymentBalanceReport(testPayload);
        assertEquals(meterType, (Integer) response.get("METER_TYPE"));
        assertEquals(balanceType, (Integer) response.get("BALANCE_TYPE"));
        assertEquals(scale, (Integer) response.get("SCALE"));
        assertEquals(balancePrecision, (Integer) response.get("BALANCE_PRECISION"));
        assertEquals(balanceValue, (Long) response.get("BALANCE_VALUE"));
        assertEquals(debtPrecision, (Integer) response.get("DEBT_PRECISION"));
        assertEquals(debt, (Long) response.get("DEBT"));
        assertEquals(emerCreditPrecision, (Integer) response.get("EMER_CREDIT_PRECISION"));
        assertEquals(emerCredit, (Long) response.get("EMER_CREDIT"));
        assertEquals(debtRecoveryPercentage, (Integer) response.get("DEBT_RECOVERY_PERCENTAGE"));
    }

    /**
     * Performs an in/out test of the PREPAYMENT_SUPPORTED_REPORT command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param typesSupported {@link Integer}
     */
    public static void testPrepaymentSupportedReportLoopback(Integer typesSupported) {
        byte[] testPayload = CommandClassPrepaymentV1.getPrepaymentSupportedReport(typesSupported);

        Map<String, Object> response = CommandClassPrepaymentV1.handlePrepaymentSupportedReport(testPayload);
        assertEquals(typesSupported, (Integer) response.get("TYPES_SUPPORTED"));
    }

}
