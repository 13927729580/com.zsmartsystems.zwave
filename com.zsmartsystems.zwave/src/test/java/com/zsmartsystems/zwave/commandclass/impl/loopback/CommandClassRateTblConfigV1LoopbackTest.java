/**
 * Copyright (c) 2016-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zwave.commandclass.impl.loopback;

import static org.junit.Assert.assertEquals;

import java.util.Map;
import com.zsmartsystems.zwave.commandclass.impl.CommandClassRateTblConfigV1;

/**
 * Class to implement loopback tests for command class <b>COMMAND_CLASS_RATE_TBL_CONFIG</b> version <b>1</b>.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class CommandClassRateTblConfigV1LoopbackTest {
    /**
     * Performs an in/out test of the RATE_TBL_SET command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param rateParameterSetId {@link Integer}
     * @param rateType {@link Integer}
     * @param rateCharacter {@link byte[]}
     * @param startHourLocalTime {@link Integer}
     * @param startMinuteLocalTime {@link Integer}
     * @param durationMinute {@link Integer}
     * @param consumptionScale {@link Integer}
     * @param consumptionPrecision {@link Integer}
     * @param minConsumptionValue {@link Long}
     * @param maxConsumptionValue {@link Long}
     * @param maxDemandScale {@link Integer}
     * @param maxDemandPrecision {@link Integer}
     * @param maxDemandValue {@link Long}
     * @param dcpRateId {@link Integer}
     */
    public static void testRateTblSetLoopback(Integer rateParameterSetId, Integer rateType, byte[] rateCharacter,
            Integer startHourLocalTime, Integer startMinuteLocalTime, Integer durationMinute, Integer consumptionScale,
            Integer consumptionPrecision, Long minConsumptionValue, Long maxConsumptionValue, Integer maxDemandScale,
            Integer maxDemandPrecision, Long maxDemandValue, Integer dcpRateId) {
        byte[] testPayload = CommandClassRateTblConfigV1.getRateTblSet(rateParameterSetId, rateType, rateCharacter,
                startHourLocalTime, startMinuteLocalTime, durationMinute, consumptionScale, consumptionPrecision,
                minConsumptionValue, maxConsumptionValue, maxDemandScale, maxDemandPrecision, maxDemandValue, dcpRateId);

        Map<String, Object> response = CommandClassRateTblConfigV1.handleRateTblSet(testPayload);
        assertEquals(rateParameterSetId, (Integer) response.get("RATE_PARAMETER_SET_ID"));
        assertEquals(rateType, (Integer) response.get("RATE_TYPE"));
        assertEquals(rateCharacter, (byte[]) response.get("RATE_CHARACTER"));
        assertEquals(startHourLocalTime, (Integer) response.get("START_HOUR_LOCAL_TIME"));
        assertEquals(startMinuteLocalTime, (Integer) response.get("START_MINUTE_LOCAL_TIME"));
        assertEquals(durationMinute, (Integer) response.get("DURATION_MINUTE"));
        assertEquals(consumptionScale, (Integer) response.get("CONSUMPTION_SCALE"));
        assertEquals(consumptionPrecision, (Integer) response.get("CONSUMPTION_PRECISION"));
        assertEquals(minConsumptionValue, (Long) response.get("MIN_CONSUMPTION_VALUE"));
        assertEquals(maxConsumptionValue, (Long) response.get("MAX_CONSUMPTION_VALUE"));
        assertEquals(maxDemandScale, (Integer) response.get("MAX_DEMAND_SCALE"));
        assertEquals(maxDemandPrecision, (Integer) response.get("MAX_DEMAND_PRECISION"));
        assertEquals(maxDemandValue, (Long) response.get("MAX_DEMAND_VALUE"));
        assertEquals(dcpRateId, (Integer) response.get("DCP_RATE_ID"));
    }

    /**
     * Performs an in/out test of the RATE_TBL_REMOVE command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param rateParameterSetId {@link byte[]}
     */
    public static void testRateTblRemoveLoopback(byte[] rateParameterSetId) {
        byte[] testPayload = CommandClassRateTblConfigV1.getRateTblRemove(rateParameterSetId);

        Map<String, Object> response = CommandClassRateTblConfigV1.handleRateTblRemove(testPayload);
        assertEquals(rateParameterSetId, (byte[]) response.get("RATE_PARAMETER_SET_ID"));
    }

}
