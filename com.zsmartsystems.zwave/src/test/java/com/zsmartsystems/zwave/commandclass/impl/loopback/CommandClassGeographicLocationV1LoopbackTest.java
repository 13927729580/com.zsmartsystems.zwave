/**
 * Copyright (c) 2016-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zwave.commandclass.impl.loopback;

import static org.junit.Assert.assertEquals;

import java.util.Map;
import com.zsmartsystems.zwave.commandclass.impl.CommandClassGeographicLocationV1;

/**
 * Class to implement loopback tests for command class <b>COMMAND_CLASS_GEOGRAPHIC_LOCATION</b> version <b>1</b>.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class CommandClassGeographicLocationV1LoopbackTest {
    /**
     * Performs an in/out test of the GEOGRAPHIC_LOCATION_SET command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param longitudeDegrees {@link Integer}
     * @param longitudeMinutes {@link Integer}
     * @param longSign {@link Boolean}
     * @param latitudeDegrees {@link Integer}
     * @param latitudeMinutes {@link Integer}
     * @param latSign {@link Boolean}
     */
    public static void testGeographicLocationSetLoopback(Integer longitudeDegrees, Integer longitudeMinutes,
            Boolean longSign, Integer latitudeDegrees, Integer latitudeMinutes, Boolean latSign) {
        byte[] testPayload = CommandClassGeographicLocationV1.getGeographicLocationSet(longitudeDegrees,
                longitudeMinutes, longSign, latitudeDegrees, latitudeMinutes, latSign);

        Map<String, Object> response = CommandClassGeographicLocationV1.handleGeographicLocationSet(testPayload);
        assertEquals(longitudeDegrees, (Integer) response.get("LONGITUDE_DEGREES"));
        assertEquals(longitudeMinutes, (Integer) response.get("LONGITUDE_MINUTES"));
        assertEquals(longSign, (Boolean) response.get("LONG_SIGN"));
        assertEquals(latitudeDegrees, (Integer) response.get("LATITUDE_DEGREES"));
        assertEquals(latitudeMinutes, (Integer) response.get("LATITUDE_MINUTES"));
        assertEquals(latSign, (Boolean) response.get("LAT_SIGN"));
    }

    /**
     * Performs an in/out test of the GEOGRAPHIC_LOCATION_REPORT command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param longitudeDegrees {@link Integer}
     * @param longitudeMinutes {@link Integer}
     * @param longSign {@link Boolean}
     * @param latitudeDegrees {@link Integer}
     * @param latitudeMinutes {@link Integer}
     * @param latSign {@link Boolean}
     */
    public static void testGeographicLocationReportLoopback(Integer longitudeDegrees, Integer longitudeMinutes,
            Boolean longSign, Integer latitudeDegrees, Integer latitudeMinutes, Boolean latSign) {
        byte[] testPayload = CommandClassGeographicLocationV1.getGeographicLocationReport(longitudeDegrees,
                longitudeMinutes, longSign, latitudeDegrees, latitudeMinutes, latSign);

        Map<String, Object> response = CommandClassGeographicLocationV1.handleGeographicLocationReport(testPayload);
        assertEquals(longitudeDegrees, (Integer) response.get("LONGITUDE_DEGREES"));
        assertEquals(longitudeMinutes, (Integer) response.get("LONGITUDE_MINUTES"));
        assertEquals(longSign, (Boolean) response.get("LONG_SIGN"));
        assertEquals(latitudeDegrees, (Integer) response.get("LATITUDE_DEGREES"));
        assertEquals(latitudeMinutes, (Integer) response.get("LATITUDE_MINUTES"));
        assertEquals(latSign, (Boolean) response.get("LAT_SIGN"));
    }

}
