/**
 * Copyright (c) 2016-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zwave.commandclass.impl.loopback;

import static org.junit.Assert.assertEquals;

import java.util.Map;
import com.zsmartsystems.zwave.commandclass.impl.CommandClassScreenAttributesV2;

/**
 * Class to implement loopback tests for command class <b>COMMAND_CLASS_SCREEN_ATTRIBUTES</b> version <b>2</b>.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class CommandClassScreenAttributesV2LoopbackTest {
    /**
     * Performs an in/out test of the SCREEN_ATTRIBUTES_REPORT command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param numberOfLines {@link Integer}
     * @param escapeSequence {@link Boolean}
     * @param numberOfCharactersPerLine {@link Integer}
     * @param sizeOfLineBuffer {@link Integer}
     * @param numericalPresentationOfACharacter {@link Integer}
     * @param screenTimeout {@link Integer}
     */
    public static void testScreenAttributesReportLoopback(Integer numberOfLines, Boolean escapeSequence,
            Integer numberOfCharactersPerLine, Integer sizeOfLineBuffer, Integer numericalPresentationOfACharacter,
            Integer screenTimeout) {
        byte[] testPayload = CommandClassScreenAttributesV2.getScreenAttributesReport(numberOfLines, escapeSequence,
                numberOfCharactersPerLine, sizeOfLineBuffer, numericalPresentationOfACharacter, screenTimeout);

        Map<String, Object> response = CommandClassScreenAttributesV2.handleScreenAttributesReport(testPayload);
        assertEquals(numberOfLines, (Integer) response.get("NUMBER_OF_LINES"));
        assertEquals(escapeSequence, (Boolean) response.get("ESCAPE_SEQUENCE"));
        assertEquals(numberOfCharactersPerLine, (Integer) response.get("NUMBER_OF_CHARACTERS_PER_LINE"));
        assertEquals(sizeOfLineBuffer, (Integer) response.get("SIZE_OF_LINE_BUFFER"));
        assertEquals(numericalPresentationOfACharacter, (Integer) response.get("NUMERICAL_PRESENTATION_OF_A_CHARACTER"));
        assertEquals(screenTimeout, (Integer) response.get("SCREEN_TIMEOUT"));
    }

}
