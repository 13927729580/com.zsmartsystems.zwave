/**
 * Copyright (c) 2016-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zwave.commandclass.impl.loopback;

import static org.junit.Assert.assertEquals;

import java.util.Map;
import com.zsmartsystems.zwave.commandclass.impl.CommandClassApplicationStatusV1;

/**
 * Class to implement loopback tests for command class <b>COMMAND_CLASS_APPLICATION_STATUS</b> version <b>1</b>.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class CommandClassApplicationStatusV1LoopbackTest {
    /**
     * Performs an in/out test of the APPLICATION_BUSY command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param status {@link String}
     * @param waitTime {@link Integer}
     */
    public static void testApplicationBusyLoopback(String status, Integer waitTime) {
        byte[] testPayload = CommandClassApplicationStatusV1.getApplicationBusy(status, waitTime);

        Map<String, Object> response = CommandClassApplicationStatusV1.handleApplicationBusy(testPayload);
        assertEquals(status, (String) response.get("STATUS"));
        assertEquals(waitTime, (Integer) response.get("WAIT_TIME"));
    }

    /**
     * Performs an in/out test of the APPLICATION_REJECTED_REQUEST command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param status {@link Integer}
     */
    public static void testApplicationRejectedRequestLoopback(Integer status) {
        byte[] testPayload = CommandClassApplicationStatusV1.getApplicationRejectedRequest(status);

        Map<String, Object> response = CommandClassApplicationStatusV1.handleApplicationRejectedRequest(testPayload);
        assertEquals(status, (Integer) response.get("STATUS"));
    }

}
