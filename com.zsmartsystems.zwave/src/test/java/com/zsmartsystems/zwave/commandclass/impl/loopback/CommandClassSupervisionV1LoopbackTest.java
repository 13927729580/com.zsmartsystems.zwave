/**
 * Copyright (c) 2016-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zwave.commandclass.impl.loopback;

import static org.junit.Assert.assertEquals;

import java.util.Map;
import com.zsmartsystems.zwave.commandclass.impl.CommandClassSupervisionV1;

/**
 * Class to implement loopback tests for command class <b>COMMAND_CLASS_SUPERVISION</b> version <b>1</b>.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class CommandClassSupervisionV1LoopbackTest {
    /**
     * Performs an in/out test of the SUPERVISION_GET command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param sessionId {@link Integer}
     * @param statusUpdates {@link Boolean}
     * @param encapsulatedCommandLength {@link Integer}
     * @param encapsulatedCommand {@link byte[]}
     */
    public static void testSupervisionGetLoopback(Integer sessionId, Boolean statusUpdates,
            Integer encapsulatedCommandLength, byte[] encapsulatedCommand) {
        byte[] testPayload = CommandClassSupervisionV1.getSupervisionGet(sessionId, statusUpdates,
                encapsulatedCommandLength, encapsulatedCommand);

        Map<String, Object> response = CommandClassSupervisionV1.handleSupervisionGet(testPayload);
        assertEquals(sessionId, (Integer) response.get("SESSION_ID"));
        assertEquals(statusUpdates, (Boolean) response.get("STATUS_UPDATES"));
        assertEquals(encapsulatedCommandLength, (Integer) response.get("ENCAPSULATED_COMMAND_LENGTH"));
        assertEquals(encapsulatedCommand, (byte[]) response.get("ENCAPSULATED_COMMAND"));
    }

    /**
     * Performs an in/out test of the SUPERVISION_REPORT command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param sessionId {@link Integer}
     * @param moreStatusUpdates {@link Boolean}
     * @param status {@link String}
     * @param duration {@link Integer}
     */
    public static void testSupervisionReportLoopback(Integer sessionId, Boolean moreStatusUpdates, String status,
            Integer duration) {
        byte[] testPayload = CommandClassSupervisionV1.getSupervisionReport(sessionId, moreStatusUpdates, status,
                duration);

        Map<String, Object> response = CommandClassSupervisionV1.handleSupervisionReport(testPayload);
        assertEquals(sessionId, (Integer) response.get("SESSION_ID"));
        assertEquals(moreStatusUpdates, (Boolean) response.get("MORE_STATUS_UPDATES"));
        assertEquals(status, (String) response.get("STATUS"));
        assertEquals(duration, (Integer) response.get("DURATION"));
    }

}
