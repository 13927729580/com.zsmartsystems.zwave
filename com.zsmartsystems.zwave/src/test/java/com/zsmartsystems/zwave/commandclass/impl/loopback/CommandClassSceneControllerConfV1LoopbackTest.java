/**
 * Copyright (c) 2016-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zwave.commandclass.impl.loopback;

import static org.junit.Assert.assertEquals;

import java.util.Map;
import com.zsmartsystems.zwave.commandclass.impl.CommandClassSceneControllerConfV1;

/**
 * Class to implement loopback tests for command class <b>COMMAND_CLASS_SCENE_CONTROLLER_CONF</b> version <b>1</b>.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class CommandClassSceneControllerConfV1LoopbackTest {
    /**
     * Performs an in/out test of the SCENE_CONTROLLER_CONF_SET command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param groupId {@link Integer}
     * @param sceneId {@link Integer}
     * @param dimmingDuration {@link String}
     */
    public static void testSceneControllerConfSetLoopback(Integer groupId, Integer sceneId, String dimmingDuration) {
        byte[] testPayload = CommandClassSceneControllerConfV1.getSceneControllerConfSet(groupId, sceneId,
                dimmingDuration);

        Map<String, Object> response = CommandClassSceneControllerConfV1.handleSceneControllerConfSet(testPayload);
        assertEquals(groupId, (Integer) response.get("GROUP_ID"));
        assertEquals(sceneId, (Integer) response.get("SCENE_ID"));
        assertEquals(dimmingDuration, (String) response.get("DIMMING_DURATION"));
    }

    /**
     * Performs an in/out test of the SCENE_CONTROLLER_CONF_GET command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param groupId {@link Integer}
     */
    public static void testSceneControllerConfGetLoopback(Integer groupId) {
        byte[] testPayload = CommandClassSceneControllerConfV1.getSceneControllerConfGet(groupId);

        Map<String, Object> response = CommandClassSceneControllerConfV1.handleSceneControllerConfGet(testPayload);
        assertEquals(groupId, (Integer) response.get("GROUP_ID"));
    }

    /**
     * Performs an in/out test of the SCENE_CONTROLLER_CONF_REPORT command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param groupId {@link Integer}
     * @param sceneId {@link Integer}
     * @param dimmingDuration {@link String}
     */
    public static void testSceneControllerConfReportLoopback(Integer groupId, Integer sceneId, String dimmingDuration) {
        byte[] testPayload = CommandClassSceneControllerConfV1.getSceneControllerConfReport(groupId, sceneId,
                dimmingDuration);

        Map<String, Object> response = CommandClassSceneControllerConfV1.handleSceneControllerConfReport(testPayload);
        assertEquals(groupId, (Integer) response.get("GROUP_ID"));
        assertEquals(sceneId, (Integer) response.get("SCENE_ID"));
        assertEquals(dimmingDuration, (String) response.get("DIMMING_DURATION"));
    }

}
