/**
 * Copyright (c) 2016-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zwave.commandclass.impl.loopback;

import static org.junit.Assert.assertEquals;

import java.util.Map;
import com.zsmartsystems.zwave.commandclass.impl.CommandClassInclusionControllerV1;

/**
 * Class to implement loopback tests for command class <b>COMMAND_CLASS_INCLUSION_CONTROLLER</b> version <b>1</b>.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class CommandClassInclusionControllerV1LoopbackTest {
    /**
     * Performs an in/out test of the INITIATE command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param nodeId {@link Integer}
     * @param stepId {@link String}
     */
    public static void testInitiateLoopback(Integer nodeId, String stepId) {
        byte[] testPayload = CommandClassInclusionControllerV1.getInitiate(nodeId, stepId);

        Map<String, Object> response = CommandClassInclusionControllerV1.handleInitiate(testPayload);
        assertEquals(nodeId, (Integer) response.get("NODE_ID"));
        assertEquals(stepId, (String) response.get("STEP_ID"));
    }

    /**
     * Performs an in/out test of the COMPLETE command.
     * <p>
     * Test is designed to ensure that the command generates the same data
     * as the handler processes and is mainly a check of the code generator.
     *
     * @param stepId {@link String}
     * @param status {@link String}
     */
    public static void testCompleteLoopback(String stepId, String status) {
        byte[] testPayload = CommandClassInclusionControllerV1.getComplete(stepId, status);

        Map<String, Object> response = CommandClassInclusionControllerV1.handleComplete(testPayload);
        assertEquals(stepId, (String) response.get("STEP_ID"));
        assertEquals(status, (String) response.get("STATUS"));
    }

}
